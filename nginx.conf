# nginx.conf (backend proxy para Axum no Railway)

events {
    worker_connections 10240;
    multi_accept on;
    use epoll;
}

http {
    # Logs
    access_log off;                          # Em produção: use access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log warn;


    # Performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Compressão de resposta
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_min_length 256;
    gzip_comp_level 5;

    # Limites de upload e buffer
    client_max_body_size 10M;
    client_body_buffer_size 128k;

    # Proteção contra abuso
    limit_req_zone $binary_remote_addr zone=req_limit:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=addr_limit:10m;

    upstream api {
        # Para uso local em Docker:
        server api:8000;

        # Para ambiente externo como Railway (troque pela URL real):
        #server backend-nextlevelcodeblog.up.railway.app:443;  # use HTTPS
    }

    server {
        listen 9999;
        # Em produção, usar:
        # listen 443 ssl;
        # server_name api.seudominio.com;

        # SSL em produção
        # ssl_certificate     /etc/letsencrypt/live/api.seudominio.com/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/api.seudominio.com/privkey.pem;

        location / {
            limit_req zone=req_limit burst=10 nodelay;
            limit_conn addr_limit 10;

            #proxy_pass https://backend-nextlevelcodeblog.up.railway.app;  # HTTPS externo
            proxy_pass http://api;  # Para uso local em Docker
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 10s;
            proxy_send_timeout    30s;
            proxy_read_timeout    30s;
        }

        # Bloqueio de agentes suspeitos
        if ($http_user_agent ~* (curl|wget|python|bot|crawler|spider)) {
            return 403;
        }

        # Exemplo de proteção por Referer (opcional)
        # location /form {
        #     if ($http_referer !~* "^https://(www\.)?seusite\.vercel\.app") {
        #         return 403;
        #     }
        #     proxy_pass https://backend-nextlevelcodeblog.up.railway.app;
        # }
    }

    # Em produção, redirecionar HTTP para HTTPS
    # server {
    #     listen 80;
    #     server_name api.seudominio.com;
    #     return 301 https://$host$request_uri;
    # }
}
