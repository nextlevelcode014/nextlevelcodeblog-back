name: CI Prod - Docker Builder

on:
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  IMAGE_NAME: nextlevelcode/nextlevelcode-blog

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Criar .env para Compose
        run: |
          cat <<EOF > .env
          SMTP_SERVER=${{ secrets.SMTP_SERVER }}
          SMTP_PORT=${{ secrets.SMTP_PORT }}
          SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
          EOF

      - name: Build e iniciar containers
        run: docker compose -f docker-compose-prod.yml up --build -d

      - name: Rodar migrações
        run: docker exec api cargo sqlx migrate run

      - name: Rodar testes
        run: docker exec api cargo test --verbose

      - name: Desligar containers
        if: always()
        run: docker compose -f docker-compose-prod.yml down -v

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Install Railway CLI
        run: curl -fsSL https://railway.app/install.sh | sh

      - name: Deploy to Railway
        run: ~/.railway/bin/railway up --service backend
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
